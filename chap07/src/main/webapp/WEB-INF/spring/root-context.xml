<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- HikariCP 라이브러리를 이용한, 데이터 소스 설정 -->


	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"> <!-- 빈의 속성으로는 보통 id, class만 사용 -->
		<description>이 빈의 설명 작성, 쓸 일 그닥 없음</description>

		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />

		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@db202110221035_high?TNS_ADMIN=C:/opt/OracleCloudWallet/ATP" />

		<property name="username" value="admin" />
		<property name="password" value="Oracle12345!!!" />

		<!-- Connection Pool 에 대한 상세설정 -->
		<property name="maximumPoolSize" value="10" />
		<property name="minimumIdle" value="2" />
		<property name="idleTimeout" value="10000" />
		<property name="connectionTimeout" value="1000" />
		<property name="connectionTestQuery"
			value="SELECT 1 FROM dual" />
		<property name="dataSourceJNDI" value="jdbc/HikariCP" />
		<property name="poolName" value="*** HikariDataSource ***" />

	</bean>

	<!-- 데이터소스 빈 클래스 설정 
	HikariConfig hikariConfig = new HikariConfig();
	HikariDataSource hikariDataSource = new HikariDataSource(config);
	-->
	<bean id="hikariDataSource"
		class="com.zaxxer.hikari.HikariDataSource">
		
		<constructor-arg ref="hikariConfig" />
		<!-- hikariDataSource 빈을 실행하기위해 
		생성자의 인자값(constructor-arg)으로 위의 값(hikariConfig) 참고(ref) -->
	</bean>
	
	
	<!-- MyBatis-Spring 연계 라이브러리에서 제공되는 특수한 빈을 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="hikariDataSource"/>
		<!-- classpath안에서 mybatis-config.xml 찾아라ㄱ -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		
		<!--<property name="mapperLocations" value="classpath:mappers/**/SQL*.xml" />
		 mapper파일 위치 찾기 가능하지만 이 파일에서 하지않는다 -->
	</bean >
	
	<!-- MyBatis-Spring 연계 라이브러리에서 제공되는 특수한 태그를 등록 
	MyBatis Mapper Interface를 Scanning해서 자동으로 빈으로 등록해주는 태그: 
		<mybatis-spring:scan base-package=""/>	
	-->	
	<mybatis-spring:scan base-package="org.zerock.myapp.mapper"/>

</beans>
