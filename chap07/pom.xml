<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.zerock</groupId>
	<artifactId>myapp</artifactId>

	<name>chap07</name>
	<url>http://bitcamp.org</url>
	<description>Spring MVC project</description>

	<version>1.0.0-BUILD-SNAPSHOT</version>

	<packaging>war</packaging>

	<properties>
		<java-version>11</java-version>
		<java-home>${env.JAVA_HOME}</java-home>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework-version>5.3.11</org.springframework-version>
		<org.aspectj-version>1.9.7</org.aspectj-version>
		<org.slf4j-version>1.7.32</org.slf4j-version>
	</properties>


	<dependencies>

		<!-- ====================== Spring ====================== -->

		<!-- spring-context -->
		<!-- 빈즈를 구성하고, 구동시키는 라이브러리 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>

			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- spring-webmvc -->
		<!-- mvc 패턴대로 웹 어플리케이션이 사용되게 하겠다는 라이브러리 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
			<!-- scope태그 생략시 <scope>compile</scope> 과 의미 동일하다 -->
		</dependency>

		<!-- spring-test -->
		<!-- test시 springframework를 같이 구동시키기 위해 필요한 라이브러리 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<!-- <version>5.3.10</version> 직접 버전 하드코딩하지않고 하기처럼 작성 -->
			<version> ${org.springframework-version}</version>

			<scope>test</scope>
		</dependency>

		<!-- spring-jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- spring-tx -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>


		<!-- ====================== AspectJ ====================== -->

		<!-- aspectjrt -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- aspectweaver -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- ====================== Logging ====================== -->

		<!-- log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.14.1</version>
		</dependency>


		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<!-- 프로그램이 실행 중일 때 사용하는 라이브러리 runtime -->
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- ====================== Mics ====================== -->

		<!-- 의존성주입시, 의존성 객체를 주입해주세요라는 신호를 @Autowired 사용 -->
		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.22</version>

			<scope>provided</scope>
		</dependency>

		<!-- ====================== 웹표준 ====================== -->

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<!-- provided: 위의 라이브러리는 별도의 실행환경에서 제공되는 라이브러리로 컴파일 할 때는 사용되지만 실행할 때는 
				WAS같은 별도의 실행환경에서 대신 제공되는 라이브러리임을 의미 (==실행환경에서 제공되기때문에 배포시 제외된다.) -->
			<scope>provided</scope>
		</dependency>

		<!-- javax.servlet.jsp-api -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.3</version>

			<scope>provided</scope>
		</dependency>

		<!-- JSTL : Java Standard Tag Library EL은 언어라서 spec이 필요하지만 jstl은 기능;클래스의 
			묶음이라 spec이 필요 ㄴㄴ -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

		<!-- =================== Oracle JDBC =================== -->
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8-production</artifactId>
			<version>21.1.0.0</version>

			<type>pom</type>

			<exclusions>
				<exclusion>
					<groupId>com.oracle.database.ha</groupId>
					<artifactId>simplefan</artifactId>
				</exclusion>

				<exclusion>
					<groupId>com.oracle.database.ha</groupId>
					<artifactId>ons</artifactId>
				</exclusion>

				<exclusion>
					<groupId>com.oracle.database.jdbc</groupId>
					<artifactId>rsi</artifactId>
				</exclusion>

				<exclusion>
					<groupId>com.oracle.database.jdbc</groupId>
					<artifactId>ucp</artifactId>
				</exclusion>

				<exclusion>
					<groupId>com.oracle.database.xml</groupId>
					<artifactId>xdb</artifactId>
				</exclusion>

				<exclusion>
					<groupId>com.oracle.database.xml</groupId>
					<artifactId>xmlparserv2</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.5.7</version>
		</dependency>

		<!-- mybatis-spring -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>2.0.6</version>
		</dependency>


		<!-- log4jdbc-log4j2-jdbc4.1 -->
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
			<version>1.16</version>
		</dependency>

		<!-- HikariCP -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>5.0.0</version>
		</dependency>

		<!-- jackson-databind -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.13.0</version>
		</dependency>
		
		<!-- commons-fileupload -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.4</version>
		</dependency>
	</dependencies>


	<build>
		<finalName>/</finalName>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>

				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>

					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>

					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>

				<configuration>
					<verbose>true</verbose>
					<fork>true</fork>

					<meminitial>64m</meminitial>
					<maxmem>128m</maxmem>

					<encoding>${project.build.sourceEncoding}</encoding>

					<source>${java-version}</source>
					<target>${java-version}</target>

					<executable>${java-home}\bin\javac</executable>
					<compilerArgs>
						<arg>-verbose</arg>
						<arg>-Xlint:all</arg>
					</compilerArgs>

					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>

				<configuration>
					<mainClass>org.test.int1.Main</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
